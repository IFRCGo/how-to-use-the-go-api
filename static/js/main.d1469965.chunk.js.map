{"version":3,"sources":["../node_modules/@ionic/core/dist/esm lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","components/Menu.tsx","components/CodeViewer.tsx","components/CodeContainer.tsx","components/Theme.tsx","components/ChartViewer.tsx","components/ChartContainer.tsx","pages/Page.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Menu","location","useLocation","contentId","type","href","key","autoHide","examples","example","className","hash","routerLink","routerDirection","lines","detail","slot","ios","codeSlashOutline","md","codeSlashSharp","title","rel","target","documentTextOutline","documentTextSharp","CodeViewer","selectedLanguage","isDarkThemeChecked","languages","source","javaScriptOptions","lineNumbers","autoRefresh","matchBrackets","mode","theme","value","options","onBeforeChange","editor","data","pythonOptions","CodeContainer","setSelectedLanguage","scrollY","language","languageIndex","fill","onClick","Theme","setDarkThemeChecked","document","body","classList","toggle","checked","onIonChange","event","ChartViewer","chart","api","useState","setData","loading","setLoading","backgroundColors","borderColors","getDataFromReliefWebResponse","useCallback","reliefWebAPIResponse","embedded","facets","reliefWeb","reliefWebAPIResponseFacetData","count","onReliefWebAPIResponse","reliefWebResponse","parsedReliefWebAPIResponse","datasets","length","reliefWebDataset","label","backgroundColor","Array","labels","borderColor","borderWidth","newDatasets","concat","newData","useEffect","requestHeaders","Headers","headers","entries","set","fetch","url","response","json","onGoAPIResponse","finally","JSON","stringify","method","pythonChartData","pythonChartAxes","axes","querySelector","mpld3","draw_figure","width","height","plugins","button","enabled","dispatchEvent","MouseEvent","view","window","bubbles","cancelable","buttons","loadPythonChart","goAPIResponse","parsedGoAPIResponse","getDataFromResponseResults","results","responseResults","responseResultLabel","responseResultKey","forEach","responseResult","responseResultValue","s","a","replace","split","i","n","k","ObjectByString","dataIndex","indexOf","push","slice","src","renderChartViewer","ChartContainer","Page","getExample","exampleIndex","findIndex","React","selectedExample","setSelectedExample","name","getDefaultLanguageForExample","find","isDarkPreferred","matchMedia","matches","fullscreen","collapse","size","description","guide","App","path","component","exact","from","to","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+JAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,IACA,GAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B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","file":"static/js/main.d1469965.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t337,\n\t\t6\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t338,\n\t\t7\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t339,\n\t\t8\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t340,\n\t\t18\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t341,\n\t\t19\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t342,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t343,\n\t\t20\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t344,\n\t\t21\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t345,\n\t\t22\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t346,\n\t\t23\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t347,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t348,\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t349,\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t350,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t351,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t352,\n\t\t25\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t353,\n\t\t26\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t354,\n\t\t27\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t355,\n\t\t28\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t356,\n\t\t29\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t357,\n\t\t9\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t358,\n\t\t15\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t359,\n\t\t10\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t360,\n\t\t30\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t361,\n\t\t31\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t362,\n\t\t32\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t363,\n\t\t12\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t364,\n\t\t17\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t365,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t366,\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t367,\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t368,\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t369,\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t370,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t371,\n\t\t14\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t372,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t373,\n\t\t37\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t374,\n\t\t16\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t375,\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t376,\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t377,\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t378,\n\t\t13\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t379,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 137;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t381,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 139;\nmodule.exports = webpackAsyncContext;","import {\n    IonContent,\n    IonIcon,\n    IonItem,\n    IonLabel,\n    IonList,\n    IonListHeader,\n    IonMenu,\n    IonMenuToggle,\n    IonNote,\n} from '@ionic/react';\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n    codeSlashOutline,\n    codeSlashSharp,\n    documentTextOutline,\n    documentTextSharp,\n} from 'ionicons/icons';\nimport examples from '../assets/examples.json';\nimport './Menu.css';\n\nconst Menu: React.FC = () => {\n    const location = useLocation();\n\n    return (\n        <IonMenu contentId='main' type='overlay'>\n            <IonContent>\n                <IonList id='inbox-list'>\n                    <IonListHeader>\n                        How to use the&nbsp;\n                        <a href='https://github.com/IFRCGo/go-api'>go-api</a>?\n                    </IonListHeader>\n                    <IonNote></IonNote>\n                    <IonMenuToggle key={0} autoHide={false}>\n                        {examples.map((example) => (\n                            <IonItem\n                                className={\n                                    location.hash === '#example' + example.id\n                                        ? 'selected'\n                                        : ''\n                                }\n                                routerLink={\n                                    '/how-to-use-the-go-api#example' +\n                                    example.id\n                                }\n                                routerDirection='none'\n                                lines='none'\n                                detail={false}\n                                key={example.id}\n                            >\n                                <IonIcon\n                                    slot='start'\n                                    ios={codeSlashOutline}\n                                    md={codeSlashSharp}\n                                />\n                                <IonLabel>{example.title}</IonLabel>\n                            </IonItem>\n                        ))}\n                        <IonItem\n                            href='https://goadmin.ifrc.org/docs'\n                            lines='none'\n                            detail={false}\n                            rel='noreferrer noopener'\n                            target='_blank'\n                        >\n                            <IonIcon\n                                slot='start'\n                                ios={documentTextOutline}\n                                md={documentTextSharp}\n                            />\n                            <IonLabel>Documentation</IonLabel>\n                        </IonItem>\n                    </IonMenuToggle>\n                </IonList>\n            </IonContent>\n        </IonMenu>\n    );\n};\n\nexport default Menu;\n","import React from 'react';\nimport './CodeViewer.scss';\nimport languages from '../assets/languages.json';\nimport { IonNote } from '@ionic/react';\nimport ReactMarkdown from 'react-markdown';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/xq-light.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/python/python';\nimport 'codemirror/addon/display/autorefresh';\n\ninterface CodeViewerProps {\n    code: string;\n    selectedLanguage: string;\n    isDarkThemeChecked: boolean;\n}\n\nexport const CodeViewer: React.FC<CodeViewerProps> = ({\n    code,\n    selectedLanguage,\n    isDarkThemeChecked,\n}) => {\n    if (!code) {\n        return (\n            <IonNote className='ion-margin ion-padding'>\n                Code for {selectedLanguage} is not available\n            </IonNote>\n        );\n    }\n\n    switch (selectedLanguage) {\n        case languages[0]:\n            return (\n                <pre className='ion-padding'>\n                    <ReactMarkdown source={code} />\n                </pre>\n            );\n        case languages[1]:\n            return (\n                <pre className='ion-padding'>\n                    <ReactMarkdown source={code} />\n                </pre>\n            );\n        case languages[2]:\n            const javaScriptOptions = {\n                lineNumbers: true,\n                autoRefresh: true,\n                matchBrackets: true,\n                mode: 'text/typescript',\n                theme: isDarkThemeChecked ? 'material' : 'xq-light',\n            };\n            return (\n                <CodeMirror\n                    value={code}\n                    options={javaScriptOptions}\n                    onBeforeChange={(editor, data, value) => {}}\n                />\n            );\n        case languages[3]:\n            const pythonOptions = {\n                lineNumbers: true,\n                autoRefresh: true,\n                matchBrackets: true,\n                mode: 'python',\n                theme: isDarkThemeChecked ? 'material' : 'xq-light',\n            };\n            return (\n                <CodeMirror\n                    value={code}\n                    options={pythonOptions}\n                    onBeforeChange={(editor, data, value) => {}}\n                />\n            );\n        default:\n            return (\n                <IonNote className='ion-margin ion-padding'>\n                    Found Unsupported Code\n                </IonNote>\n            );\n    }\n};\n","import React from 'react';\nimport { IonButton, IonContent, IonHeader } from '@ionic/react';\nimport { CodeViewer } from './CodeViewer';\nimport languages from '../assets/languages.json';\nimport './CodeContainer.scss';\n\ninterface CodeContainerProps {\n    code: { [key: string]: any };\n    selectedLanguage: string;\n    setSelectedLanguage: (language: string) => void;\n    isDarkThemeChecked: boolean;\n}\n\nexport const CodeContainer: React.FC<CodeContainerProps> = ({\n    code,\n    selectedLanguage,\n    setSelectedLanguage,\n    isDarkThemeChecked,\n}) => {\n    return (\n        <IonContent className='code-container' scrollY={false}>\n            <IonHeader>\n                {languages.map((language, languageIndex) => {\n                    return code[language] ? (\n                        <IonButton\n                            key={languageIndex}\n                            fill={\n                                selectedLanguage === language\n                                    ? 'solid'\n                                    : 'clear'\n                            }\n                            onClick={() => setSelectedLanguage(language)}\n                        >\n                            {language}\n                        </IonButton>\n                    ) : null;\n                })}\n            </IonHeader>\n            <IonContent className='code-viewer'>\n                <CodeViewer\n                    code={code[selectedLanguage]}\n                    selectedLanguage={selectedLanguage}\n                    isDarkThemeChecked={isDarkThemeChecked}\n                ></CodeViewer>\n            </IonContent>\n        </IonContent>\n    );\n};\n","import { IonItem, IonLabel, IonList, IonToggle } from '@ionic/react';\nimport React from 'react';\nimport './Theme.scss';\n\ninterface ThemeProps {\n    isDarkThemeChecked: boolean;\n    setDarkThemeChecked: (setDarkTheme: boolean) => void;\n}\n\nexport const Theme: React.FC<ThemeProps> = ({\n    isDarkThemeChecked,\n    setDarkThemeChecked,\n}) => {\n    document.body.classList.toggle('dark', isDarkThemeChecked);\n\n    return (\n        <IonList>\n            <IonItem lines='none'>\n                <IonLabel>Dark Theme</IonLabel>\n                <IonToggle\n                    slot='end'\n                    checked={isDarkThemeChecked}\n                    onIonChange={(event) => {\n                        document.body.classList.toggle(\n                            'dark',\n                            event.detail.checked\n                        );\n                        setDarkThemeChecked(event.detail.checked);\n                    }}\n                ></IonToggle>\n            </IonItem>\n        </IonList>\n    );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { IonImg, IonNote } from '@ionic/react';\nimport languages from '../assets/languages.json';\nimport './ChartViewer.scss';\n\ndeclare var mpld3: any;\n\ninterface GoAPIResponse {\n    count: number;\n    next: string;\n    previous: string;\n    results: GoAPIResponseResult[];\n}\n\ninterface ReliefWebAPIResponse {\n    count: number;\n    next: string;\n    previous: string;\n    results: GoAPIResponseResult[];\n    data: ReliefWebAPIResponseData[];\n    embedded: ReliefWebAPIResponseEmbedded;\n    href: string;\n    time: number;\n    took: number;\n    totalCount: number;\n}\n\ninterface GoAPIResponseResult {\n    [key: string]: string;\n}\n\ninterface ReliefWebAPIResponseData {\n    [key: string]: string;\n}\n\ninterface ReliefWebAPIResponseEmbedded {\n    facets: ReliefWebAPIResponseFacets;\n}\n\ninterface ReliefWebAPIResponseFacets {\n    [key: string]: ReliefWebAPIResponseFacet;\n}\n\ninterface ReliefWebAPIResponseFacet {\n    data: ReliefWebAPIResponseFacetData[];\n    missing: number;\n    more: boolean;\n    type: string;\n}\n\ninterface ReliefWebAPIResponseFacetData {\n    value: string;\n    count: number;\n}\n\ninterface Dataset {\n    label: string;\n    data: number[];\n    backgroundColor: string[];\n    borderColor: string[];\n    borderWidth: number;\n}\n\ninterface Data {\n    labels: string[];\n    datasets: Dataset[];\n}\n\ninterface ChartViewerProps {\n    chart: any;\n    api: any;\n    selectedLanguage: string;\n}\n\nfunction ObjectByString(o: any, s: string) {\n    s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n    s = s.replace(/^\\./, ''); // strip a leading dot\n    const a = s.split('.');\n    for (var i = 0, n = a.length; i < n; ++i) {\n        const k = a[i];\n        if (k in o) {\n            o = o[k];\n        } else {\n            return;\n        }\n    }\n    return o;\n}\n\nexport const ChartViewer: React.FC<ChartViewerProps> = ({\n    chart,\n    api,\n    selectedLanguage,\n}) => {\n    const [data, setData] = useState({} as Data);\n    const [loading, setLoading] = useState(false);\n\n    const backgroundColors = [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)',\n    ];\n\n    const borderColors = [\n        'rgba(255, 99, 132, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)',\n    ];\n\n    const getDataFromReliefWebResponse = useCallback(\n        (reliefWebAPIResponse: ReliefWebAPIResponse) => {\n            return reliefWebAPIResponse.embedded.facets[\n                api.reliefWeb.key\n            ].data.map(\n                (\n                    reliefWebAPIResponseFacetData: ReliefWebAPIResponseFacetData\n                ) => reliefWebAPIResponseFacetData.count\n            );\n        },\n        [api.reliefWeb]\n    );\n\n    const onReliefWebAPIResponse = useCallback(\n        (reliefWebResponse: ReliefWebAPIResponse): void => {\n            const parsedReliefWebAPIResponse = getDataFromReliefWebResponse(\n                reliefWebResponse\n            );\n            if (data.datasets[0] && data.datasets.length < 2) {\n                const reliefWebDataset: Dataset = {\n                    label: api.reliefWeb.label,\n                    data: parsedReliefWebAPIResponse,\n                    backgroundColor: Array(data.labels.length).fill(\n                        backgroundColors[1]\n                    ),\n                    borderColor: Array(data.labels.length).fill(\n                        borderColors[1]\n                    ),\n                    borderWidth: 1,\n                };\n                const newDatasets = data.datasets.concat(reliefWebDataset);\n                const newData = { ...data };\n                newData.datasets = newDatasets;\n                newData.datasets[0].backgroundColor = Array(\n                    data.labels.length\n                ).fill(backgroundColors[0]);\n                newData.datasets[0].borderColor = Array(\n                    data.labels.length\n                ).fill(borderColors[0]);\n                setData(newData);\n            }\n        },\n        [\n            api.reliefWeb,\n            data,\n            getDataFromReliefWebResponse,\n            backgroundColors,\n            borderColors,\n        ]\n    );\n\n    const callReliefWebAPI = () => {\n        if (chart && selectedLanguage === languages[2] && api.reliefWeb) {\n            setLoading(true);\n            fetch(api.reliefWeb.url, {\n                body: JSON.stringify(api.reliefWeb.body),\n                method: 'POST',\n            })\n                .then((response) => response.json())\n                .then(onReliefWebAPIResponse)\n                .finally(() => setLoading(false));\n        }\n    };\n\n    const callGoAPI = () => {\n        if (chart && selectedLanguage === languages[2]) {\n            setLoading(true);\n\n            const requestHeaders: HeadersInit = new Headers();\n            if (api.headers) {\n                for (const [key, value] of Object.entries(api.headers)) {\n                    requestHeaders.set(key, `${value}`);\n                }\n            }\n\n            fetch(api.url, {\n                headers: requestHeaders,\n            })\n                .then((response) => response.json())\n                .then(onGoAPIResponse)\n                .finally(() => setLoading(false));\n        }\n    };\n\n    useEffect(callGoAPI, [api, selectedLanguage]);\n\n    useEffect(callReliefWebAPI, [api, data]);\n\n    useEffect(() => {\n        if (!chart) return;\n\n        const pythonChartData = chart.data;\n        const pythonChartAxes = chart.axes;\n\n        const loadPythonChart = (data: any, axes: any) => {\n            if (document.querySelector('#python-chart')) {\n                mpld3.draw_figure(\n                    'python-chart',\n                    {\n                        width: 600.0,\n                        height: 300.0,\n                        data,\n                        axes,\n                        id: 'python-chart',\n                        plugins: [\n                            { type: 'reset' },\n                            { button: true, type: 'zoom', enabled: false },\n                            { button: true, type: 'boxzoom', enabled: false },\n                        ],\n                    },\n                    null,\n                    true\n                );\n                document.querySelector('.mpld3-resetbutton')?.dispatchEvent(\n                    new MouseEvent('click', {\n                        view: window,\n                        bubbles: true,\n                        cancelable: true,\n                        buttons: 1,\n                    })\n                );\n            }\n        };\n\n        if (selectedLanguage === languages[3])\n            loadPythonChart(pythonChartData, pythonChartAxes);\n    }, [chart, selectedLanguage]);\n\n    const onGoAPIResponse = (goAPIResponse: GoAPIResponse): void => {\n        const parsedGoAPIResponse = getDataFromResponseResults(\n            goAPIResponse.results,\n            chart.label,\n            chart.key\n        );\n        setData(parsedGoAPIResponse);\n    };\n\n    const getDataFromResponseResults = (\n        responseResults: GoAPIResponseResult[],\n        responseResultLabel: string,\n        responseResultKey: string\n    ) => {\n        const data: Data = {\n            labels: [],\n            datasets: [\n                {\n                    label: responseResultLabel,\n                    data: [],\n                    backgroundColor: [],\n                    borderColor: [],\n                    borderWidth: 1,\n                },\n            ],\n        };\n\n        responseResults.forEach((responseResult) => {\n            const responseResultValue = ObjectByString(\n                responseResult,\n                responseResultKey\n            );\n\n            const dataIndex = data.labels.indexOf(responseResultValue);\n\n            if (dataIndex >= 0) {\n                data.datasets[0].data[dataIndex] += 1;\n            } else {\n                data.labels.push(responseResultValue);\n                data.datasets[0].data.push(1);\n                data.datasets[0].backgroundColor = backgroundColors.slice(\n                    0,\n                    data.datasets[0].data.length\n                );\n                data.datasets[0].borderColor = borderColors.slice(\n                    0,\n                    data.datasets[0].data.length\n                );\n            }\n        });\n\n        return data;\n    };\n\n    const renderChartViewer = () => {\n        if (!chart) {\n            return (\n                <IonNote className='ion-margin ion-padding'>\n                    Chart for {selectedLanguage} is not available\n                </IonNote>\n            );\n        }\n\n        switch (selectedLanguage) {\n            case languages[0]:\n                return <IonImg src={chart} className='ion-image' />;\n            case languages[1]:\n                return <IonImg src={chart} className='ion-image' />;\n            case languages[2]:\n                return loading ? (\n                    <div className='loader'>Loading...</div>\n                ) : (\n                    <Bar data={data} options={chart.options} />\n                );\n            case languages[3]:\n                return <div id='python-chart'></div>;\n            default:\n                return (\n                    <IonNote className='ion-margin ion-padding'>\n                        Found Unsupported Chart\n                    </IonNote>\n                );\n        }\n    };\n\n    return renderChartViewer();\n};\n","import React from 'react';\nimport { ChartViewer } from './ChartViewer';\nimport './ChartContainer.scss';\n\ninterface ChartContainerProps {\n    chart: any;\n    api: any;\n    selectedLanguage: string;\n}\n\nexport const ChartContainer: React.FC<ChartContainerProps> = ({\n    chart,\n    api,\n    selectedLanguage,\n}) => {\n    const renderChartContainer = () => {\n        return chart[selectedLanguage] ? (\n            <div className='chart-container'>\n                <ChartViewer\n                    chart={chart[selectedLanguage]}\n                    api={api}\n                    selectedLanguage={selectedLanguage}\n                ></ChartViewer>\n            </div>\n        ) : null;\n    };\n\n    return renderChartContainer();\n};\n","import {\n    IonButtons,\n    IonContent,\n    IonHeader,\n    IonMenuButton,\n    IonNote,\n    IonPage,\n    IonTitle,\n    IonToolbar,\n} from '@ionic/react';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { CodeContainer } from '../components/CodeContainer';\nimport { Theme } from '../components/Theme';\nimport { ChartContainer } from '../components/ChartContainer';\nimport examples from '../assets/examples.json';\nimport languages from '../assets/languages.json';\nimport { useLocation } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport './Page.css';\nimport { Example } from '../models/example';\n\nconst Page: React.FC = () => {\n    const location = useLocation();\n\n    const getExample = useCallback((): Example => {\n        const exampleIndex = examples.findIndex(\n            (example) => '#example' + example.id === location.hash\n        );\n        const example =\n            exampleIndex >= 0 ? examples[exampleIndex] : examples[0];\n        return example as Example;\n    }, [location.hash]);\n\n    const [selectedExample, setSelectedExample] = React.useState(getExample());\n\n    useEffect(() => {\n        setSelectedExample(getExample());\n    }, [getExample, location]);\n\n    const name = selectedExample.title;\n\n    const getDefaultLanguageForExample = (example: Example): string => {\n        return (\n            languages.find(\n                (language: string) => example.code && language in example.code\n            ) || languages[0]\n        );\n    };\n\n    const [selectedLanguage, setSelectedLanguage] = React.useState(\n        getDefaultLanguageForExample(selectedExample)\n    );\n\n    useEffect(() => {\n        setSelectedLanguage(getDefaultLanguageForExample(selectedExample));\n    }, [selectedExample]);\n\n    const isDarkPreferred = window.matchMedia('(prefers-color-scheme: dark)')\n        .matches;\n    const [isDarkThemeChecked, setDarkThemeChecked] = useState(isDarkPreferred);\n\n    return (\n        <IonPage>\n            <IonHeader>\n                <IonToolbar>\n                    <IonButtons slot='start'>\n                        <IonMenuButton />\n                    </IonButtons>\n                    <IonTitle>{name}</IonTitle>\n                    <div slot='end'>\n                        <Theme\n                            isDarkThemeChecked={isDarkThemeChecked}\n                            setDarkThemeChecked={setDarkThemeChecked}\n                        />\n                    </div>\n                </IonToolbar>\n            </IonHeader>\n\n            <IonContent fullscreen>\n                <IonHeader collapse='condense'>\n                    <IonToolbar>\n                        <IonTitle size='large'>{name}</IonTitle>\n                    </IonToolbar>\n                </IonHeader>\n                <IonNote className='ion-margin ion-padding'>\n                    {selectedExample.description}\n                </IonNote>\n                <div className='ion-margin'>\n                    {selectedExample.guide && (\n                        <ReactMarkdown\n                            className='ion-padding'\n                            source={selectedExample.guide}\n                        />\n                    )}\n                </div>\n                <div className='ion-margin'>\n                    {selectedExample.chart && (\n                        <ChartContainer\n                            chart={selectedExample.chart}\n                            api={selectedExample.api}\n                            selectedLanguage={selectedLanguage}\n                        />\n                    )}\n                </div>\n                <div className='ion-margin'>\n                    {selectedExample.code && (\n                        <CodeContainer\n                            code={selectedExample.code}\n                            selectedLanguage={selectedLanguage}\n                            setSelectedLanguage={setSelectedLanguage}\n                            isDarkThemeChecked={isDarkThemeChecked}\n                        />\n                    )}\n                </div>\n            </IonContent>\n        </IonPage>\n    );\n};\n\nexport default Page;\n","import Menu from './components/Menu';\nimport Page from './pages/Page';\nimport React from 'react';\nimport { IonApp, IonRouterOutlet, IonSplitPane } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { Redirect, Route } from 'react-router-dom';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.scss';\n\nconst App: React.FC = () => {\n    return (\n        <IonApp>\n            <IonReactRouter>\n                <IonSplitPane contentId='main'>\n                    <Menu />\n                    <IonRouterOutlet id='main'>\n                        <Route path='/how-to-use-the-go-api' component={Page} />\n                        <Redirect\n                            exact\n                            from='/'\n                            to='/how-to-use-the-go-api#example1'\n                        />\n                    </IonRouterOutlet>\n                </IonSplitPane>\n            </IonReactRouter>\n        </IonApp>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}