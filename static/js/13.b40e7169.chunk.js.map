{"version":3,"sources":["../node_modules/@ionic/core/dist/esm/ion-toggle.entry.js","../node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","../node_modules/@ionic/core/dist/esm/haptic-27b3f981.js"],"names":["Toggle","hostRef","registerInstance","this","ionChange","createEvent","ionFocus","ionBlur","ionStyle","inputId","toggleIds","lastDrag","activated","name","checked","disabled","value","onClick","Date","now","onFocus","emit","onBlur","isChecked","emitStyle","gesture","enable","createGesture","el","gestureName","gesturePriority","threshold","passive","onStart","onMove","ev","onEnd","disabledChanged","destroy","undefined","setFocus","detail","shouldToggle","document","deltaX","hapticSelection","event","preventDefault","stopImmediatePropagation","buttonEl","focus","color","mode","getIonMode","labelId","label","findItemLabel","getValue","id","renderHiddenInput","h","Host","role","class","createColorClasses","hostContext","part","type","ref","btnEl","getElement","doc","margin","isRTL","dir","style","ios","md","selector","closest","cssClassMap","length","Object","assign","getClassMap","classes","map","Array","isArray","split","filter","c","trim","getClassList","forEach","SCHEME","openURL","url","direction","animation","a","test","router","querySelector","push","HapticEngine","getEngine","win","window","TapticEngine","Capacitor","isPluginAvailable","Plugins","Haptics","available","isCordova","isCapacitor","impact","options","engine","toUpperCase","notification","selection","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","gestureSelectionEnd","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticImpact"],"mappings":"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","file":"static/js/13.b40e7169.chunk.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-e806d1f6.js';\nimport { b as getIonMode } from './ionic-global-9d5c8ee3.js';\nimport { f as findItemLabel, c as renderHiddenInput } from './helpers-002e4980.js';\nimport { c as hapticSelection } from './haptic-27b3f981.js';\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\n\nconst toggleIosCss = \":host{-webkit-box-sizing:content-box !important;box-sizing:content-box !important;display:inline-block;position:relative;outline:none;contain:content;cursor:pointer;-ms-touch-action:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-focused) input{border:2px solid #5e9ed6}:host(.toggle-disabled){pointer-events:none}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.toggle-icon-wrapper{display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;width:100%;height:100%;-webkit-transition:var(--handle-transition);transition:var(--handle-transition);will-change:transform}.toggle-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;background:var(--background);pointer-events:none;overflow:inherit}:host(.toggle-checked) .toggle-icon{background:var(--background-checked)}.toggle-inner{left:var(--handle-spacing);border-radius:var(--handle-border-radius);position:absolute;width:var(--handle-width);height:var(--handle-height);max-height:var(--handle-max-height);-webkit-transition:var(--handle-transition);transition:var(--handle-transition);background:var(--handle-background);-webkit-box-shadow:var(--handle-box-shadow);box-shadow:var(--handle-box-shadow);contain:strict}[dir=rtl] .toggle-inner,:host-context([dir=rtl]) .toggle-inner{left:unset;right:unset;right:var(--handle-spacing)}:host(.toggle-checked) .toggle-icon-wrapper{-webkit-transform:translate3d(calc(100% - var(--handle-width)), 0, 0);transform:translate3d(calc(100% - var(--handle-width)), 0, 0)}:host-context([dir=rtl]):host(.toggle-checked) .toggle-icon-wrapper,:host-context([dir=rtl]).toggle-checked .toggle-icon-wrapper{-webkit-transform:translate3d(calc(-100% + var(--handle-width)), 0, 0);transform:translate3d(calc(-100% + var(--handle-width)), 0, 0)}:host(.toggle-checked) .toggle-inner{-webkit-transform:translate3d(calc(var(--handle-spacing) * -2), 0, 0);transform:translate3d(calc(var(--handle-spacing) * -2), 0, 0);background:var(--handle-background-checked)}:host-context([dir=rtl]):host(.toggle-checked) .toggle-inner,:host-context([dir=rtl]).toggle-checked .toggle-inner{-webkit-transform:translate3d(calc(var(--handle-spacing) * 2), 0, 0);transform:translate3d(calc(var(--handle-spacing) * 2), 0, 0)}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.088);--background-checked:var(--ion-color-primary, #3880ff);--border-radius:16px;--handle-background:#ffffff;--handle-background-checked:#ffffff;--handle-border-radius:25.5px;--handle-box-shadow:0 3px 12px rgba(0, 0, 0, 0.16), 0 3px 1px rgba(0, 0, 0, 0.1);--handle-height:calc(32px - (2px * 2));--handle-max-height:calc(100% - (var(--handle-spacing) * 2));--handle-width:calc(32px - (2px * 2));--handle-spacing:2px;--handle-transition:transform 300ms, width 120ms ease-in-out 80ms, left 110ms ease-in-out 80ms, right 110ms ease-in-out 80ms;width:51px;height:32px;contain:strict;overflow:hidden}:host(.ion-color.toggle-checked) .toggle-icon{background:var(--ion-color-base)}.toggle-icon{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);-webkit-transition:background-color 300ms;transition:background-color 300ms}.toggle-inner{will-change:transform}:host(.toggle-activated) .toggle-icon::before,:host(.toggle-checked) .toggle-icon::before{-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0)}:host(.toggle-activated.toggle-checked) .toggle-inner::before{-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0)}:host(.toggle-activated) .toggle-inner{width:calc(var(--handle-width) + 6px)}:host(.toggle-activated.toggle-checked) .toggle-icon-wrapper{-webkit-transform:translate3d(calc(100% - var(--handle-width) - 6px), 0, 0);transform:translate3d(calc(100% - var(--handle-width) - 6px), 0, 0)}:host-context([dir=rtl]):host(.toggle-activated.toggle-checked) .toggle-icon-wrapper,:host-context([dir=rtl]).toggle-activated.toggle-checked .toggle-icon-wrapper{-webkit-transform:translate3d(calc(-100% + var(--handle-width) + 6px), 0, 0);transform:translate3d(calc(-100% + var(--handle-width) + 6px), 0, 0)}:host(.toggle-disabled){opacity:0.3}:host(.in-item[slot]){margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:20px;padding-right:10px;padding-top:6px;padding-bottom:5px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot]){padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:10px;padding-inline-end:10px}}:host(.in-item[slot=start]){padding-left:0;padding-right:16px;padding-top:6px;padding-bottom:5px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){padding-left:unset;padding-right:unset;-webkit-padding-start:0;padding-inline-start:0;-webkit-padding-end:16px;padding-inline-end:16px}}\";\n\nconst toggleMdCss = \":host{-webkit-box-sizing:content-box !important;box-sizing:content-box !important;display:inline-block;position:relative;outline:none;contain:content;cursor:pointer;-ms-touch-action:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-focused) input{border:2px solid #5e9ed6}:host(.toggle-disabled){pointer-events:none}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.toggle-icon-wrapper{display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;width:100%;height:100%;-webkit-transition:var(--handle-transition);transition:var(--handle-transition);will-change:transform}.toggle-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;background:var(--background);pointer-events:none;overflow:inherit}:host(.toggle-checked) .toggle-icon{background:var(--background-checked)}.toggle-inner{left:var(--handle-spacing);border-radius:var(--handle-border-radius);position:absolute;width:var(--handle-width);height:var(--handle-height);max-height:var(--handle-max-height);-webkit-transition:var(--handle-transition);transition:var(--handle-transition);background:var(--handle-background);-webkit-box-shadow:var(--handle-box-shadow);box-shadow:var(--handle-box-shadow);contain:strict}[dir=rtl] .toggle-inner,:host-context([dir=rtl]) .toggle-inner{left:unset;right:unset;right:var(--handle-spacing)}:host(.toggle-checked) .toggle-icon-wrapper{-webkit-transform:translate3d(calc(100% - var(--handle-width)), 0, 0);transform:translate3d(calc(100% - var(--handle-width)), 0, 0)}:host-context([dir=rtl]):host(.toggle-checked) .toggle-icon-wrapper,:host-context([dir=rtl]).toggle-checked .toggle-icon-wrapper{-webkit-transform:translate3d(calc(-100% + var(--handle-width)), 0, 0);transform:translate3d(calc(-100% + var(--handle-width)), 0, 0)}:host(.toggle-checked) .toggle-inner{-webkit-transform:translate3d(calc(var(--handle-spacing) * -2), 0, 0);transform:translate3d(calc(var(--handle-spacing) * -2), 0, 0);background:var(--handle-background-checked)}:host-context([dir=rtl]):host(.toggle-checked) .toggle-inner,:host-context([dir=rtl]).toggle-checked .toggle-inner{-webkit-transform:translate3d(calc(var(--handle-spacing) * 2), 0, 0);transform:translate3d(calc(var(--handle-spacing) * 2), 0, 0)}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.39);--background-checked:rgba(var(--ion-color-primary-rgb, 56, 128, 255), 0.5);--border-radius:14px;--handle-background:#ffffff;--handle-background-checked:var(--ion-color-primary, #3880ff);--handle-border-radius:50%;--handle-box-shadow:0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);--handle-width:20px;--handle-height:20px;--handle-max-height:calc(100% + 6px);--handle-spacing:0;--handle-transition:transform 160ms cubic-bezier(0.4, 0, 0.2, 1), background-color 160ms cubic-bezier(0.4, 0, 0.2, 1);padding-left:12px;padding-right:12px;padding-top:12px;padding-bottom:12px;width:36px;height:14px;contain:strict}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host(.ion-color.toggle-checked) .toggle-icon{background:rgba(var(--ion-color-base-rgb), 0.5)}:host(.ion-color.toggle-checked) .toggle-inner{background:var(--ion-color-base)}.toggle-icon{-webkit-transition:background-color 160ms;transition:background-color 160ms}.toggle-inner{will-change:background-color, transform}:host(.toggle-disabled){opacity:0.3}:host(.in-item[slot]){margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:16px;padding-right:0;padding-top:12px;padding-bottom:12px;cursor:pointer}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot]){padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:0;padding-inline-end:0}}:host(.in-item[slot=start]){padding-left:2px;padding-right:18px;padding-top:12px;padding-bottom:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:18px;padding-inline-end:18px}}\";\n\nconst Toggle = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = `ion-tg-${toggleIds++}`;\n    this.lastDrag = 0;\n    this.activated = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the toggle is selected.\n     */\n    this.checked = false;\n    /**\n     * If `true`, the user cannot interact with the toggle.\n     */\n    this.disabled = false;\n    /**\n     * The value of the toggle does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n     * it's only used when the toggle participates in a native `<form>`.\n     */\n    this.value = 'on';\n    this.onClick = () => {\n      if (this.lastDrag + 300 < Date.now()) {\n        this.checked = !this.checked;\n      }\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  checkedChanged(isChecked) {\n    this.ionChange.emit({\n      checked: isChecked,\n      value: this.value\n    });\n  }\n  disabledChanged() {\n    this.emitStyle();\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async connectedCallback() {\n    this.gesture = (await import('./index-f49d994d.js')).createGesture({\n      el: this.el,\n      gestureName: 'toggle',\n      gesturePriority: 100,\n      threshold: 5,\n      passive: false,\n      onStart: () => this.onStart(),\n      onMove: ev => this.onMove(ev),\n      onEnd: ev => this.onEnd(ev),\n    });\n    this.disabledChanged();\n  }\n  disconnectedCallback() {\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'interactive-disabled': this.disabled,\n    });\n  }\n  onStart() {\n    this.activated = true;\n    // touch-action does not work in iOS\n    this.setFocus();\n  }\n  onMove(detail) {\n    if (shouldToggle(document, this.checked, detail.deltaX, -10)) {\n      this.checked = !this.checked;\n      hapticSelection();\n    }\n  }\n  onEnd(ev) {\n    this.activated = false;\n    this.lastDrag = Date.now();\n    ev.event.preventDefault();\n    ev.event.stopImmediatePropagation();\n  }\n  getValue() {\n    return this.value || '';\n  }\n  setFocus() {\n    if (this.buttonEl) {\n      this.buttonEl.focus();\n    }\n  }\n  render() {\n    const { inputId, disabled, checked, activated, color, el } = this;\n    const mode = getIonMode(this);\n    const labelId = inputId + '-lbl';\n    const label = findItemLabel(el);\n    const value = this.getValue();\n    if (label) {\n      label.id = labelId;\n    }\n    renderHiddenInput(true, el, this.name, (checked ? value : ''), disabled);\n    return (h(Host, { onClick: this.onClick, role: \"checkbox\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'toggle-activated': activated,\n        'toggle-checked': checked,\n        'toggle-disabled': disabled,\n        'interactive': true\n      }) }, h(\"div\", { class: \"toggle-icon\", part: \"track\" }, h(\"div\", { class: \"toggle-icon-wrapper\" }, h(\"div\", { class: \"toggle-inner\", part: \"handle\" }))), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: disabled, ref: btnEl => this.buttonEl = btnEl, \"aria-hidden\": \"true\" })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"checked\": [\"checkedChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nconst shouldToggle = (doc, checked, deltaX, margin) => {\n  const isRTL = doc.dir === 'rtl';\n  if (checked) {\n    return (!isRTL && (margin > deltaX)) ||\n      (isRTL && (-margin < deltaX));\n  }\n  else {\n    return (!isRTL && (-margin < deltaX)) ||\n      (isRTL && (margin > deltaX));\n  }\n};\nlet toggleIds = 0;\nToggle.style = {\n  ios: toggleIosCss,\n  md: toggleMdCss\n};\n\nexport { Toggle as ion_toggle };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n"],"sourceRoot":""}