{"version":3,"sources":["../node_modules/@ionic/core/dist/esm/ion-spinner.entry.js","../node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","../node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js"],"names":["Spinner","hostRef","registerInstance","this","paused","spinnerName","name","config","get","mode","getIonMode","getName","spinner","SPINNERS","duration","dur","svgs","undefined","circles","i","push","buildCircle","lines","buildLine","h","Host","class","createColorClasses","color","getBoolean","role","style","elmDuration","animationDuration","index","total","data","fn","viewBox","transform","cx","cy","r","y1","y2","hostContext","selector","el","closest","cssClassMap","length","Object","assign","getClassMap","classes","map","Array","isArray","split","filter","c","trim","getClassList","forEach","SCHEME","openURL","url","ev","direction","animation","a","test","router","document","querySelector","preventDefault","animationDelay","angle","Math","PI","sin","cos","step","fill","_"],"mappings":"sPAOMA,EAAO,WACX,WAAYC,GAAS,oBACnBC,YAAiBC,KAAMF,GAIvBE,KAAKC,QAAS,EANL,sDAST,IAAMC,EAAcF,KAAKG,MAAQC,IAAOC,IAAI,WACtCC,EAAOC,YAAWP,MACxB,OAAIE,IAGa,QAATI,EAAkB,QAAU,cAd3B,+BAgBF,MAEDA,EAAOC,YADAP,MAEPE,EAFOF,KAEYQ,UACnBC,EAAUC,IAASR,IAAgBQ,IAAQ,MAC3CC,EAAqC,kBAJ9BX,KAIiBW,UAJjBX,KAI+CW,SAAW,GAJ1DX,KAIoEW,SAAWF,EAAQG,IAC9FC,EAAO,GACb,QAAwBC,IAApBL,EAAQM,QACV,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAQM,QAASC,IACnCH,EAAKI,KAAKC,EAAYT,EAASE,EAAUK,EAAGP,EAAQM,eAGnD,QAAsBD,IAAlBL,EAAQU,MACf,IAAK,IAAIH,EAAI,EAAGA,EAAIP,EAAQU,MAAOH,IACjCH,EAAKI,KAAKG,EAAUX,EAASE,EAAUK,EAAGP,EAAQU,QAGtD,OAAQE,YAAEC,IAAM,CAAEC,MAAOC,YAhBZxB,KAgBoCyB,OAAN,mBACtCnB,GAAO,GAD+B,gCAE3BJ,IAAgB,GAFW,cAGvC,mBAnBSF,KAmBgBC,QAAUG,IAAOsB,WAAW,aAHd,IAIrCC,KAAM,cAAeC,MAAOnB,EAAQoB,YAAc,CAAEC,kBAAmBnB,EAAW,MAAS,IAAME,OArC9F,KAwCPK,EAAc,SAACT,EAASE,EAAUoB,EAAOC,GAC7C,IAAMC,EAAOxB,EAAQyB,GAAGvB,EAAUoB,EAAOC,GAEzC,OADAC,EAAKL,MAAM,sBAAwBjB,EAAW,KACtCU,YAAE,MAAO,CAAEc,QAASF,EAAKE,SAAW,YAAaP,MAAOK,EAAKL,OAASP,YAAE,SAAU,CAAEe,UAAWH,EAAKG,WAAa,mBAAoBC,GAAIJ,EAAKI,GAAIC,GAAIL,EAAKK,GAAIC,EAAGN,EAAKM,EAAGX,MAAOnB,EAAQoB,YAAc,CAAEC,kBAAmBnB,EAAW,MAAS,OAEpPS,EAAY,SAACX,EAASE,EAAUoB,EAAOC,GAC3C,IAAMC,EAAOxB,EAAQyB,GAAGvB,EAAUoB,EAAOC,GAEzC,OADAC,EAAKL,MAAM,sBAAwBjB,EAAW,KACtCU,YAAE,MAAO,CAAEc,QAASF,EAAKE,SAAW,YAAaP,MAAOK,EAAKL,OAASP,YAAE,OAAQ,CAAEe,UAAW,mBAAoBI,GAAIP,EAAKO,GAAIC,GAAIR,EAAKQ,OAEjJ5C,EAAQ+B,MApDW,20H,4MCLbc,EAAc,SAACC,EAAUC,GAC7B,OAAgC,OAAzBA,EAAGC,QAAQF,IAKdnB,EAAqB,SAACC,EAAOqB,GACjC,MAAyB,kBAAVrB,GAAsBA,EAAMsB,OAAS,EAAKC,OAAOC,OAAPD,OAAA,IAAAA,CAAA,CAAgB,aAAa,GAA7B,oBAAiDvB,IAAU,GAAQqB,GAAeA,GAYvII,EAAc,SAACC,GACnB,IAAMC,EAAM,GAEZ,OAbmB,SAACD,GACpB,YAAgBrC,IAAZqC,GACYE,MAAMC,QAAQH,GAAWA,EAAUA,EAAQI,MAAM,MAE5DC,QAAO,SAAAC,GAAC,OAAS,MAALA,KACZL,KAAI,SAAAK,GAAC,OAAIA,EAAEC,UACXF,QAAO,SAAAC,GAAC,MAAU,KAANA,KAEV,GAIPE,CAAaR,GAASS,SAAQ,SAAAH,GAAC,OAAIL,EAAIK,IAAK,KACrCL,GAEHS,EAAS,uBACTC,EAAO,uCAAG,WAAOC,EAAKC,EAAIC,EAAWC,GAA3B,eAAAC,EAAA,yDACH,MAAPJ,GAA0B,MAAXA,EAAI,IAAeF,EAAOO,KAAKL,GADpC,qBAENM,EAASC,SAASC,cAAc,eAF1B,uBAIA,MAANP,GACFA,EAAGQ,iBALK,kBAOHH,EAAOpD,KAAK8C,EAAKE,EAAWC,IAPzB,iCAUP,GAVO,2CAAH,6D,iCCzBb,sCA2GMxD,EA3GW,CACf,QAAW,CACTE,IAAK,IACLG,QAAS,EACTmB,GAAI,SAACtB,EAAKmB,EAAOC,GACf,IAAMyC,EAAiB,GAAH,OAAO7D,EAAMmB,EAAQC,EAASpB,EAA9B,MACd8D,EAAQ,EAAIC,KAAKC,GAAK7C,EAAQC,EACpC,MAAO,CACLO,EAAG,EACHX,MAAO,CACL,cAAU,EAAI+C,KAAKE,IAAIH,GAAvB,MACA,eAAW,EAAIC,KAAKG,IAAIJ,GAAxB,MACA,kBAAmBD,MAK3B,QAAW,CACT7D,IAAK,IACLG,QAAS,EACTmB,GAAI,SAACtB,EAAKmB,EAAOC,GACf,IAAM+C,EAAOhD,EAAQC,EACfyC,EAAiB,GAAH,OAAO7D,EAAMmE,EAAQnE,EAArB,MACd8D,EAAQ,EAAIC,KAAKC,GAAKG,EAC5B,MAAO,CACLxC,EAAG,EACHX,MAAO,CACL,cAAU,EAAI+C,KAAKE,IAAIH,GAAvB,MACA,eAAW,EAAIC,KAAKG,IAAIJ,GAAxB,MACA,kBAAmBD,MAK3B,SAAY,CACV7D,IAAK,KACLiB,aAAa,EACbd,QAAS,EACTmB,GAAI,WACF,MAAO,CACLK,EAAG,GACHF,GAAI,GACJC,GAAI,GACJ0C,KAAM,OACN7C,QAAS,cACTC,UAAW,iBACXR,MAAO,MAIb,SAAY,CACVhB,IAAK,IACLG,QAAS,EACTmB,GAAI,WACF,MAAO,CACLK,EAAG,GACHX,MAAO,MAIb,KAAQ,CACNhB,IAAK,IACLG,QAAS,EACTmB,GAAI,SAAC+C,EAAGlD,GACN,IAAM0C,GAAmB,IAAM1C,EAAS,KACxC,MAAO,CACLQ,EAAG,EACHX,MAAO,CACL,eAAW,EAAK,EAAIG,EAApB,MACA,kBAAmB0C,MAK3B,MAAS,CACP7D,IAAK,IACLO,MAAO,GACPe,GAAI,SAACtB,EAAKmB,EAAOC,GAGf,MAAO,CACLQ,GAAI,GACJC,GAAI,GACJb,MAAO,CACL,UANc,UAAH,OAAa,GAAKG,GAASA,EAAQ,EAAI,KAAO,KAA9C,QAOX,kBANmB,GAAH,OAAOnB,EAAMmB,EAAQC,EAASpB,EAA9B,UAWxB,cAAe,CACbA,IAAK,IACLO,MAAO,GACPe,GAAI,SAACtB,EAAKmB,EAAOC,GAGf,MAAO,CACLQ,GAAI,GACJC,GAAI,GACJb,MAAO,CACL,UANc,UAAH,OAAa,GAAKG,GAASA,EAAQ,EAAI,KAAO,KAA9C,QAOX,kBANmB,GAAH,OAAOnB,EAAMmB,EAAQC,EAASpB,EAA9B","file":"static/js/14.37fe7af4.chunk.js","sourcesContent":["import { r as registerInstance, h, H as Host } from './index-e806d1f6.js';\nimport { c as config, b as getIonMode } from './ionic-global-9d5c8ee3.js';\nimport { c as createColorClasses } from './theme-ff3fc52f.js';\nimport { S as SPINNERS } from './spinner-configs-cd7845af.js';\n\nconst spinnerCss = \":host{display:inline-block;position:relative;width:28px;height:28px;color:var(--color);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.ion-color){color:var(--ion-color-base)}svg{left:0;top:0;-webkit-transform-origin:center;transform-origin:center;position:absolute;width:100%;height:100%;-webkit-transform:translateZ(0);transform:translateZ(0)}[dir=rtl] svg,:host-context([dir=rtl]) svg{left:unset;right:unset;right:0}[dir=rtl] svg,:host-context([dir=rtl]) svg{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}:host(.spinner-lines) line,:host(.spinner-lines-small) line{stroke-width:4px;stroke-linecap:round;stroke:currentColor}:host(.spinner-lines) svg,:host(.spinner-lines-small) svg{-webkit-animation:spinner-fade-out 1s linear infinite;animation:spinner-fade-out 1s linear infinite}:host(.spinner-bubbles) svg{-webkit-animation:spinner-scale-out 1s linear infinite;animation:spinner-scale-out 1s linear infinite;fill:currentColor}:host(.spinner-circles) svg{-webkit-animation:spinner-fade-out 1s linear infinite;animation:spinner-fade-out 1s linear infinite;fill:currentColor}:host(.spinner-crescent) circle{fill:transparent;stroke-width:4px;stroke-dasharray:128px;stroke-dashoffset:82px;stroke:currentColor}:host(.spinner-crescent) svg{-webkit-animation:spinner-rotate 1s linear infinite;animation:spinner-rotate 1s linear infinite}:host(.spinner-dots) circle{stroke-width:0;fill:currentColor}:host(.spinner-dots) svg{-webkit-animation:spinner-dots 1s linear infinite;animation:spinner-dots 1s linear infinite}:host(.spinner-circular){-webkit-animation:spinner-circular linear infinite;animation:spinner-circular linear infinite}:host(.spinner-circular) circle{-webkit-animation:spinner-circular-inner ease-in-out infinite;animation:spinner-circular-inner ease-in-out infinite;stroke:currentColor;stroke-dasharray:80px, 200px;stroke-dashoffset:0px;stroke-width:5.6;fill:none}:host(.spinner-paused),:host(.spinner-paused) svg,:host(.spinner-paused) circle{-webkit-animation-play-state:paused;animation-play-state:paused}@-webkit-keyframes spinner-fade-out{0%{opacity:1}100%{opacity:0}}@keyframes spinner-fade-out{0%{opacity:1}100%{opacity:0}}@-webkit-keyframes spinner-scale-out{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1)}100%{-webkit-transform:scale(0, 0);transform:scale(0, 0)}}@keyframes spinner-scale-out{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1)}100%{-webkit-transform:scale(0, 0);transform:scale(0, 0)}}@-webkit-keyframes spinner-rotate{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-rotate{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes spinner-dots{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}50%{-webkit-transform:scale(0.4, 0.4);transform:scale(0.4, 0.4);opacity:0.3}100%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}}@keyframes spinner-dots{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}50%{-webkit-transform:scale(0.4, 0.4);transform:scale(0.4, 0.4);opacity:0.3}100%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}}@-webkit-keyframes spinner-circular{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-circular{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes spinner-circular-inner{0%{stroke-dasharray:1px, 200px;stroke-dashoffset:0px}50%{stroke-dasharray:100px, 200px;stroke-dashoffset:-15px}100%{stroke-dasharray:100px, 200px;stroke-dashoffset:-125px}}@keyframes spinner-circular-inner{0%{stroke-dasharray:1px, 200px;stroke-dashoffset:0px}50%{stroke-dasharray:100px, 200px;stroke-dashoffset:-15px}100%{stroke-dasharray:100px, 200px;stroke-dashoffset:-125px}}\";\n\nconst Spinner = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * If `true`, the spinner's animation will be paused.\n     */\n    this.paused = false;\n  }\n  getName() {\n    const spinnerName = this.name || config.get('spinner');\n    const mode = getIonMode(this);\n    if (spinnerName) {\n      return spinnerName;\n    }\n    return (mode === 'ios') ? 'lines' : 'circular';\n  }\n  render() {\n    const self = this;\n    const mode = getIonMode(self);\n    const spinnerName = self.getName();\n    const spinner = SPINNERS[spinnerName] || SPINNERS['lines'];\n    const duration = (typeof self.duration === 'number' && self.duration > 10 ? self.duration : spinner.dur);\n    const svgs = [];\n    if (spinner.circles !== undefined) {\n      for (let i = 0; i < spinner.circles; i++) {\n        svgs.push(buildCircle(spinner, duration, i, spinner.circles));\n      }\n    }\n    else if (spinner.lines !== undefined) {\n      for (let i = 0; i < spinner.lines; i++) {\n        svgs.push(buildLine(spinner, duration, i, spinner.lines));\n      }\n    }\n    return (h(Host, { class: createColorClasses(self.color, {\n        [mode]: true,\n        [`spinner-${spinnerName}`]: true,\n        'spinner-paused': !!self.paused || config.getBoolean('_testing')\n      }), role: \"progressbar\", style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} }, svgs));\n  }\n};\nconst buildCircle = (spinner, duration, index, total) => {\n  const data = spinner.fn(duration, index, total);\n  data.style['animation-duration'] = duration + 'ms';\n  return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"circle\", { transform: data.transform || 'translate(32,32)', cx: data.cx, cy: data.cy, r: data.r, style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} })));\n};\nconst buildLine = (spinner, duration, index, total) => {\n  const data = spinner.fn(duration, index, total);\n  data.style['animation-duration'] = duration + 'ms';\n  return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"line\", { transform: \"translate(32,32)\", y1: data.y1, y2: data.y2 })));\n};\nSpinner.style = spinnerCss;\n\nexport { Spinner as ion_spinner };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n"],"sourceRoot":""}