{"version":3,"sources":["../node_modules/@ionic/core/dist/esm/ion-refresher_2.entry.js","../node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","../node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js"],"names":["getRefresherAnimationType","contentEl","previousSibling","previousElementSibling","tagName","createPullingAnimation","type","pullingSpinner","createScaleAnimation","createTranslateAnimation","createBaseAnimation","pullingRefresherIcon","spinner","querySelector","circle","shadowRoot","spinnerArrowContainer","arrowContainer","arrow","baseAnimation","createAnimation","duration","easing","spinnerArrowContainerAnimation","addElement","keyframes","offset","opacity","circleInnerAnimation","strokeDasharray","circleOuterAnimation","transform","arrowContainerAnimation","arrowAnimation","addAnimation","height","clientHeight","spinnerAnimation","createSnapBackAnimation","fromTo","setSpinnerOpacity","style","setProperty","toString","handleScrollWhilePulling","ticks","currentTickToShow","writeTask","forEach","el","i","translateElement","value","Promise","resolve","trans","transitionEndAsync","undefined","removeProperty","shouldUseNativeRefresher","referenceEl","mode","refreshingSpinner","isPlatform","webkitOverflowScrolling","expectedDuration","transitionEnd","unRegTrans","animationTimeout","callback","opts","passive","ANIMATION_FALLBACK_TIMEOUT","unregister","onTransitionEnd","ev","target","addEventListener","setTimeout","clearTimeout","removeEventListener","Refresher","hostRef","registerInstance","this","ionRefresh","createEvent","ionPull","ionStart","appliedStyles","didStart","progress","pointerDown","needsCompletion","didRefresh","lastVelocityY","animations","nativeRefresher","state","pullMin","pullMax","closeDuration","snapbackDuration","pullFactor","disabled","gesture","enable","useNativeRefresher","getIonMode","closest","setupNativeRefresher","destroyNativeRefresher","scrollEl","scrollListenerCallback","ani","destroy","elementToTransform","querySelectorAll","MAX_PULL","NUM_TICKS","length","readTask","scrollTop","refresherHeight","ratio","clamp","emit","Math","abs","pullAmount","floor","beginRefresh","hapticImpact","createGesture","gestureName","gesturePriority","direction","threshold","onStart","onMove","velocityY","onEnd","resetNativeRefresher","disabledChanged","getElementRoot","refreshingCircle","canStart","data","animation","cancelled","animationType","progressStart","push","deltaY","progressStep","progressEnd","onFinish","getTimeGivenProgression","snapBackAnimation","a","play","setupiOSNativeRefresher","setupMDNativeRefresher","checkNativeRefresher","getAttribute","console","error","componentOnReady","getScrollElement","backgroundContentEl","raf","close","detail","event","touches","Number","isNaN","setCss","cancelable","preventDefault","cancel","complete","bind","delay","y","overflowVisible","scrollStyle","backgroundStyle","transitionDuration","transitionDelay","overflow","h","Host","slot","class","getElement","ios","md","RefresherContent","pullingIcon","overflowRefresher","config","get","hasSpinner","SPINNERS","name","paused","icon","lazy","pullingText","innerHTML","sanitizeDOMString","refreshingText","HapticEngine","getEngine","win","window","TapticEngine","Capacitor","isPluginAvailable","Plugins","Haptics","available","isCordova","isCapacitor","impact","options","engine","toUpperCase","notification","selection","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","gestureSelectionEnd","hapticSelection","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","dur","circles","fn","index","total","animationDelay","angle","PI","r","sin","cos","step","elmDuration","cx","cy","fill","viewBox","_","lines","y1","y2"],"mappings":"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","file":"static/js/12.147b4b4d.chunk.js","sourcesContent":["import { c as writeTask, r as registerInstance, e as createEvent, f as readTask, h, i as getElement, H as Host } from './index-e806d1f6.js';\nimport { i as isPlatform, b as getIonMode, c as config } from './ionic-global-9d5c8ee3.js';\nimport { e as clamp, g as getElementRoot, r as raf } from './helpers-002e4980.js';\nimport { c as createAnimation } from './animation-ede2d71c.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\nimport { s as sanitizeDOMString } from './index-9e3fe806.js';\nimport { d as hapticImpact } from './haptic-27b3f981.js';\nimport { S as SPINNERS } from './spinner-configs-cd7845af.js';\n\nconst getRefresherAnimationType = (contentEl) => {\n  const previousSibling = contentEl.previousElementSibling;\n  const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\nconst createPullingAnimation = (type, pullingSpinner) => {\n  return type === 'scale' ? createScaleAnimation(pullingSpinner) : createTranslateAnimation(pullingSpinner);\n};\nconst createBaseAnimation = (pullingRefresherIcon) => {\n  const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  const circle = spinner.shadowRoot.querySelector('circle');\n  const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  const arrow = (arrowContainer) ? arrowContainer.querySelector('ion-icon') : null;\n  const baseAnimation = createAnimation()\n    .duration(1000)\n    .easing('ease-out');\n  const spinnerArrowContainerAnimation = createAnimation()\n    .addElement(spinnerArrowContainer)\n    .keyframes([\n    { offset: 0, opacity: '0.3' },\n    { offset: 0.45, opacity: '0.3' },\n    { offset: 0.55, opacity: '1' },\n    { offset: 1, opacity: '1' }\n  ]);\n  const circleInnerAnimation = createAnimation()\n    .addElement(circle)\n    .keyframes([\n    { offset: 0, strokeDasharray: '1px, 200px' },\n    { offset: 0.20, strokeDasharray: '1px, 200px' },\n    { offset: 0.55, strokeDasharray: '100px, 200px' },\n    { offset: 1, strokeDasharray: '100px, 200px' }\n  ]);\n  const circleOuterAnimation = createAnimation()\n    .addElement(spinner)\n    .keyframes([\n    { offset: 0, transform: 'rotate(-90deg)' },\n    { offset: 1, transform: 'rotate(210deg)' }\n  ]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n  if (arrowContainer && arrow) {\n    const arrowContainerAnimation = createAnimation()\n      .addElement(arrowContainer)\n      .keyframes([\n      { offset: 0, transform: 'rotate(0deg)' },\n      { offset: 0.30, transform: 'rotate(0deg)' },\n      { offset: 0.55, transform: 'rotate(280deg)' },\n      { offset: 1, transform: 'rotate(400deg)' }\n    ]);\n    const arrowAnimation = createAnimation()\n      .addElement(arrow)\n      .keyframes([\n      { offset: 0, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.30, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.55, transform: 'translateX(-1.5px) scale(1)' },\n      { offset: 1, transform: 'translateX(-1.5px) scale(1)' }\n    ]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nconst createScaleAnimation = (pullingRefresherIcon) => {\n  const height = pullingRefresherIcon.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `scale(0) translateY(-${height + 20}px)` },\n    { offset: 1, transform: 'scale(1) translateY(100px)' }\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createTranslateAnimation = (pullingRefresherIcon) => {\n  const height = pullingRefresherIcon.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `translateY(-${height + 20}px)` },\n    { offset: 1, transform: 'translateY(100px)' }\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createSnapBackAnimation = (pullingRefresherIcon) => {\n  return createAnimation()\n    .duration(125)\n    .addElement(pullingRefresherIcon)\n    .fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nconst setSpinnerOpacity = (spinner, opacity) => {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\nconst handleScrollWhilePulling = (spinner, ticks, opacity, currentTickToShow) => {\n  writeTask(() => {\n    setSpinnerOpacity(spinner, opacity);\n    ticks.forEach((el, i) => el.style.setProperty('opacity', (i <= currentTickToShow) ? '0.99' : '0'));\n  });\n};\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n  writeTask(() => {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', (lastVelocityY >= 1.0) ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\nconst translateElement = (el, value) => {\n  if (!el) {\n    return Promise.resolve();\n  }\n  const trans = transitionEndAsync(el, 200);\n  writeTask(() => {\n    el.style.setProperty('transition', '0.2s all ease-out');\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    }\n    else {\n      el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n    }\n  });\n  return trans;\n};\n// Utils\n// -----------------------------\nconst shouldUseNativeRefresher = (referenceEl, mode) => {\n  const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n  const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n  return (pullingSpinner !== null &&\n    refreshingSpinner !== null &&\n    ((mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined) ||\n      mode === 'md'));\n};\nconst transitionEndAsync = (el, expectedDuration = 0) => {\n  return new Promise(resolve => {\n    transitionEnd(el, expectedDuration, resolve);\n  });\n};\nconst transitionEnd = (el, expectedDuration = 0, callback) => {\n  let unRegTrans;\n  let animationTimeout;\n  const opts = { passive: true };\n  const ANIMATION_FALLBACK_TIMEOUT = 500;\n  const unregister = () => {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n  const onTransitionEnd = (ev) => {\n    if (ev === undefined || el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n  if (el) {\n    el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n    el.addEventListener('transitionend', onTransitionEnd, opts);\n    animationTimeout = setTimeout(onTransitionEnd, expectedDuration + ANIMATION_FALLBACK_TIMEOUT);\n    unRegTrans = () => {\n      if (animationTimeout) {\n        clearTimeout(animationTimeout);\n        animationTimeout = undefined;\n      }\n      el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n      el.removeEventListener('transitionend', onTransitionEnd, opts);\n    };\n  }\n  return unregister;\n};\n\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\n\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid #ececec;background:white;-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nconst Refresher = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n    this.ionPull = createEvent(this, \"ionPull\", 7);\n    this.ionStart = createEvent(this, \"ionStart\", 7);\n    this.appliedStyles = false;\n    this.didStart = false;\n    this.progress = 0;\n    this.pointerDown = false;\n    this.needsCompletion = false;\n    this.didRefresh = false;\n    this.lastVelocityY = 0;\n    this.animations = [];\n    this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n    this.state = 1 /* Inactive */;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMax = this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n    this.disabled = false;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  checkNativeRefresher() {\n    const useNativeRefresher = shouldUseNativeRefresher(this.el, getIonMode(this));\n    if (useNativeRefresher && !this.nativeRefresher) {\n      const contentEl = this.el.closest('ion-content');\n      this.setupNativeRefresher(contentEl);\n    }\n    else if (!useNativeRefresher) {\n      this.destroyNativeRefresher();\n    }\n  }\n  destroyNativeRefresher() {\n    if (this.scrollEl && this.scrollListenerCallback) {\n      this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n      this.scrollListenerCallback = undefined;\n    }\n    this.nativeRefresher = false;\n  }\n  async resetNativeRefresher(el, state) {\n    this.state = state;\n    if (getIonMode(this) === 'ios') {\n      await translateElement(el, undefined);\n    }\n    else {\n      await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n    }\n    this.didRefresh = false;\n    this.needsCompletion = false;\n    this.pointerDown = false;\n    this.animations.forEach(ani => ani.destroy());\n    this.animations = [];\n    this.progress = 0;\n    this.state = 1 /* Inactive */;\n  }\n  async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n    this.elementToTransform = this.scrollEl;\n    const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n    const MAX_PULL = this.scrollEl.clientHeight * 0.16;\n    const NUM_TICKS = ticks.length;\n    writeTask(() => ticks.forEach(el => el.style.setProperty('animation', 'none')));\n    this.scrollListenerCallback = () => {\n      // If pointer is not on screen or refresher is not active, ignore scroll\n      if (!this.pointerDown && this.state === 1 /* Inactive */) {\n        return;\n      }\n      readTask(() => {\n        // PTR should only be active when overflow scrolling at the top\n        const scrollTop = this.scrollEl.scrollTop;\n        const refresherHeight = this.el.clientHeight;\n        if (scrollTop > 0) {\n          /**\n           * If refresher is refreshing and user tries to scroll\n           * progressively fade refresher out/in\n           */\n          if (this.state === 8 /* Refreshing */) {\n            const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n            writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n            return;\n          }\n          writeTask(() => setSpinnerOpacity(pullingSpinner, 0));\n          return;\n        }\n        if (this.pointerDown) {\n          if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n          }\n          // emit \"pulling\" on every move\n          if (this.pointerDown) {\n            this.ionPull.emit();\n          }\n        }\n        // delay showing the next tick marks until user has pulled 30px\n        const opacity = clamp(0, Math.abs(scrollTop) / refresherHeight, 0.99);\n        const pullAmount = this.progress = clamp(0, (Math.abs(scrollTop) - 30) / MAX_PULL, 1);\n        const currentTickToShow = clamp(0, Math.floor(pullAmount * NUM_TICKS), NUM_TICKS - 1);\n        const shouldShowRefreshingSpinner = this.state === 8 /* Refreshing */ || currentTickToShow === NUM_TICKS - 1;\n        if (shouldShowRefreshingSpinner) {\n          if (this.pointerDown) {\n            handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n          }\n          if (!this.didRefresh) {\n            this.beginRefresh();\n            this.didRefresh = true;\n            hapticImpact({ style: 'light' });\n            /**\n             * Translate the content element otherwise when pointer is removed\n             * from screen the scroll content will bounce back over the refresher\n             */\n            if (!this.pointerDown) {\n              translateElement(this.elementToTransform, `${refresherHeight}px`);\n            }\n          }\n        }\n        else {\n          this.state = 2 /* Pulling */;\n          handleScrollWhilePulling(pullingSpinner, ticks, opacity, currentTickToShow);\n        }\n      });\n    };\n    this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n    this.gesture = (await import('./index-f49d994d.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 10,\n      direction: 'y',\n      threshold: 5,\n      onStart: () => {\n        this.pointerDown = true;\n        if (!this.didRefresh) {\n          translateElement(this.elementToTransform, '0px');\n        }\n      },\n      onMove: ev => {\n        this.lastVelocityY = ev.velocityY;\n      },\n      onEnd: () => {\n        this.pointerDown = false;\n        this.didStart = false;\n        if (this.needsCompletion) {\n          this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */);\n          this.needsCompletion = false;\n        }\n        else if (this.didRefresh) {\n          readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n        }\n      },\n    });\n    this.disabledChanged();\n  }\n  async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n    const circle = getElementRoot(pullingSpinner).querySelector('circle');\n    const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n    const refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n    if (circle !== null && refreshingCircle !== null) {\n      writeTask(() => {\n        circle.style.setProperty('animation', 'none');\n        // This lines up the animation on the refreshing spinner with the pulling spinner\n        refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n        refreshingCircle.style.setProperty('animation-delay', '-655ms');\n      });\n    }\n    this.gesture = (await import('./index-f49d994d.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 10,\n      direction: 'y',\n      threshold: 5,\n      canStart: () => this.state !== 8 /* Refreshing */ && this.state !== 32 /* Completing */ && this.scrollEl.scrollTop === 0,\n      onStart: (ev) => {\n        ev.data = { animation: undefined, didStart: false, cancelled: false };\n      },\n      onMove: (ev) => {\n        if ((ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart) || ev.data.cancelled) {\n          ev.data.cancelled = true;\n          return;\n        }\n        if (!ev.data.didStart) {\n          ev.data.didStart = true;\n          this.state = 2 /* Pulling */;\n          writeTask(() => {\n            const animationType = getRefresherAnimationType(contentEl);\n            const animation = createPullingAnimation(animationType, pullingRefresherIcon);\n            ev.data.animation = animation;\n            this.scrollEl.style.setProperty('--overflow', 'hidden');\n            animation.progressStart(false, 0);\n            this.ionStart.emit();\n            this.animations.push(animation);\n          });\n          return;\n        }\n        // Since we are using an easing curve, slow the gesture tracking down a bit\n        this.progress = clamp(0, (ev.deltaY / 180) * 0.5, 1);\n        ev.data.animation.progressStep(this.progress);\n        this.ionPull.emit();\n      },\n      onEnd: (ev) => {\n        if (!ev.data.didStart) {\n          return;\n        }\n        writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n        if (this.progress <= 0.4) {\n          this.gesture.enable(false);\n          ev.data.animation\n            .progressEnd(0, this.progress, 500)\n            .onFinish(() => {\n            this.animations.forEach(ani => ani.destroy());\n            this.animations = [];\n            this.gesture.enable(true);\n            this.state = 1 /* Inactive */;\n          });\n          return;\n        }\n        const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n        const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n        this.animations.push(snapBackAnimation);\n        writeTask(async () => {\n          pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${(progress * 100)}px`);\n          ev.data.animation.progressEnd();\n          await snapBackAnimation.play();\n          this.beginRefresh();\n          ev.data.animation.destroy();\n        });\n      }\n    });\n    this.disabledChanged();\n  }\n  async setupNativeRefresher(contentEl) {\n    if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n      return;\n    }\n    this.nativeRefresher = true;\n    const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n    if (getIonMode(this) === 'ios') {\n      this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n    }\n    else {\n      this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n    }\n  }\n  componentDidUpdate() {\n    this.checkNativeRefresher();\n  }\n  async connectedCallback() {\n    if (this.el.getAttribute('slot') !== 'fixed') {\n      console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n      return;\n    }\n    const contentEl = this.el.closest('ion-content');\n    if (!contentEl) {\n      console.error('<ion-refresher> must be used inside an <ion-content>');\n      return;\n    }\n    await contentEl.componentOnReady();\n    this.scrollEl = await contentEl.getScrollElement();\n    this.backgroundContentEl = getElementRoot(contentEl).querySelector('#background-content');\n    if (shouldUseNativeRefresher(this.el, getIonMode(this))) {\n      this.setupNativeRefresher(contentEl);\n    }\n    else {\n      this.gesture = (await import('./index-f49d994d.js')).createGesture({\n        el: contentEl,\n        gestureName: 'refresher',\n        gesturePriority: 10,\n        direction: 'y',\n        threshold: 20,\n        passive: false,\n        canStart: () => this.canStart(),\n        onStart: () => this.onStart(),\n        onMove: ev => this.onMove(ev),\n        onEnd: () => this.onEnd(),\n      });\n      this.disabledChanged();\n    }\n  }\n  disconnectedCallback() {\n    this.destroyNativeRefresher();\n    this.scrollEl = undefined;\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Call `complete()` when your async operation has completed.\n   * For example, the `refreshing` state is while the app is performing\n   * an asynchronous operation, such as receiving more data from an\n   * AJAX request. Once the data has been received, you then call this\n   * method to signify that the refreshing has completed and to close\n   * the refresher. This method also changes the refresher's state from\n   * `refreshing` to `completing`.\n   */\n  async complete() {\n    if (this.nativeRefresher) {\n      this.needsCompletion = true;\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */)));\n      }\n    }\n    else {\n      this.close(32 /* Completing */, '120ms');\n    }\n  }\n  /**\n   * Changes the refresher's state from `refreshing` to `cancelling`.\n   */\n  async cancel() {\n    if (this.nativeRefresher) {\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16 /* Cancelling */)));\n      }\n    }\n    else {\n      this.close(16 /* Cancelling */, '');\n    }\n  }\n  /**\n   * A number representing how far down the user has pulled.\n   * The number `0` represents the user hasn't pulled down at all. The\n   * number `1`, and anything greater than `1`, represents that the user\n   * has pulled far enough down that when they let go then the refresh will\n   * happen. If they let go and the number is less than `1`, then the\n   * refresh will not happen, and the content will return to it's original\n   * position.\n   */\n  getProgress() {\n    return Promise.resolve(this.progress);\n  }\n  canStart() {\n    if (!this.scrollEl) {\n      return false;\n    }\n    if (this.state !== 1 /* Inactive */) {\n      return false;\n    }\n    // if the scrollTop is greater than zero then it's\n    // not possible to pull the content down yet\n    if (this.scrollEl.scrollTop > 0) {\n      return false;\n    }\n    return true;\n  }\n  onStart() {\n    this.progress = 0;\n    this.state = 1 /* Inactive */;\n  }\n  onMove(detail) {\n    if (!this.scrollEl) {\n      return;\n    }\n    // this method can get called like a bazillion times per second,\n    // so it's built to be as efficient as possible, and does its\n    // best to do any DOM read/writes only when absolutely necessary\n    // if multi-touch then get out immediately\n    const ev = detail.event;\n    if (ev.touches && ev.touches.length > 1) {\n      return;\n    }\n    // do nothing if it's actively refreshing\n    // or it's in the way of closing\n    // or this was never a startY\n    if ((this.state & 56 /* _BUSY_ */) !== 0) {\n      return;\n    }\n    const pullFactor = (Number.isNaN(this.pullFactor) || this.pullFactor < 0) ? 1 : this.pullFactor;\n    const deltaY = detail.deltaY * pullFactor;\n    // don't bother if they're scrolling up\n    // and have not already started dragging\n    if (deltaY <= 0) {\n      // the current Y is higher than the starting Y\n      // so they scrolled up enough to be ignored\n      this.progress = 0;\n      this.state = 1 /* Inactive */;\n      if (this.appliedStyles) {\n        // reset the styles only if they were applied\n        this.setCss(0, '', false, '');\n        return;\n      }\n      return;\n    }\n    if (this.state === 1 /* Inactive */) {\n      // this refresh is not already actively pulling down\n      // get the content's scrollTop\n      const scrollHostScrollTop = this.scrollEl.scrollTop;\n      // if the scrollTop is greater than zero then it's\n      // not possible to pull the content down yet\n      if (scrollHostScrollTop > 0) {\n        this.progress = 0;\n        return;\n      }\n      // content scrolled all the way to the top, and dragging down\n      this.state = 2 /* Pulling */;\n    }\n    // prevent native scroll events\n    if (ev.cancelable) {\n      ev.preventDefault();\n    }\n    // the refresher is actively pulling at this point\n    // move the scroll element within the content element\n    this.setCss(deltaY, '0ms', true, '');\n    if (deltaY === 0) {\n      // don't continue if there's no delta yet\n      this.progress = 0;\n      return;\n    }\n    const pullMin = this.pullMin;\n    // set pull progress\n    this.progress = deltaY / pullMin;\n    // emit \"start\" if it hasn't started yet\n    if (!this.didStart) {\n      this.didStart = true;\n      this.ionStart.emit();\n    }\n    // emit \"pulling\" on every move\n    this.ionPull.emit();\n    // do nothing if the delta is less than the pull threshold\n    if (deltaY < pullMin) {\n      // ensure it stays in the pulling state, cuz its not ready yet\n      this.state = 2 /* Pulling */;\n      return;\n    }\n    if (deltaY > this.pullMax) {\n      // they pulled farther than the max, so kick off the refresh\n      this.beginRefresh();\n      return;\n    }\n    // pulled farther than the pull min!!\n    // it is now in the `ready` state!!\n    // if they let go then it'll refresh, kerpow!!\n    this.state = 4 /* Ready */;\n    return;\n  }\n  onEnd() {\n    // only run in a zone when absolutely necessary\n    if (this.state === 4 /* Ready */) {\n      // they pulled down far enough, so it's ready to refresh\n      this.beginRefresh();\n    }\n    else if (this.state === 2 /* Pulling */) {\n      // they were pulling down, but didn't pull down far enough\n      // set the content back to it's original location\n      // and close the refresher\n      // set that the refresh is actively cancelling\n      this.cancel();\n    }\n  }\n  beginRefresh() {\n    // assumes we're already back in a zone\n    // they pulled down far enough, so it's ready to refresh\n    this.state = 8 /* Refreshing */;\n    // place the content in a hangout position while it thinks\n    this.setCss(this.pullMin, this.snapbackDuration, true, '');\n    // emit \"refresh\" because it was pulled down far enough\n    // and they let go to begin refreshing\n    this.ionRefresh.emit({\n      complete: this.complete.bind(this)\n    });\n  }\n  close(state, delay) {\n    // create fallback timer incase something goes wrong with transitionEnd event\n    setTimeout(() => {\n      this.state = 1 /* Inactive */;\n      this.progress = 0;\n      this.didStart = false;\n      this.setCss(0, '0ms', false, '');\n    }, 600);\n    // reset set the styles on the scroll element\n    // set that the refresh is actively cancelling/completing\n    this.state = state;\n    this.setCss(0, this.closeDuration, true, delay);\n    // TODO: stop gesture\n  }\n  setCss(y, duration, overflowVisible, delay) {\n    if (this.nativeRefresher) {\n      return;\n    }\n    this.appliedStyles = (y > 0);\n    writeTask(() => {\n      if (this.scrollEl && this.backgroundContentEl) {\n        const scrollStyle = this.scrollEl.style;\n        const backgroundStyle = this.backgroundContentEl.style;\n        scrollStyle.transform = backgroundStyle.transform = ((y > 0) ? `translateY(${y}px) translateZ(0px)` : '');\n        scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n        scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n        scrollStyle.overflow = (overflowVisible ? 'hidden' : '');\n      }\n    });\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { slot: \"fixed\", class: {\n        [mode]: true,\n        // Used internally for styling\n        [`refresher-${mode}`]: true,\n        'refresher-native': this.nativeRefresher,\n        'refresher-active': this.state !== 1 /* Inactive */,\n        'refresher-pulling': this.state === 2 /* Pulling */,\n        'refresher-ready': this.state === 4 /* Ready */,\n        'refresher-refreshing': this.state === 8 /* Refreshing */,\n        'refresher-cancelling': this.state === 16 /* Cancelling */,\n        'refresher-completing': this.state === 32 /* Completing */,\n      } }));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nRefresher.style = {\n  ios: refresherIosCss,\n  md: refresherMdCss\n};\n\nconst RefresherContent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  componentWillLoad() {\n    if (this.pullingIcon === undefined) {\n      const mode = getIonMode(this);\n      const overflowRefresher = this.el.style.webkitOverflowScrolling !== undefined ? 'lines' : 'arrow-down';\n      this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && isPlatform('mobile') ? config.get('spinner', overflowRefresher) : 'circular');\n    }\n    if (this.refreshingSpinner === undefined) {\n      const mode = getIonMode(this);\n      this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'circular'));\n    }\n  }\n  render() {\n    const pullingIcon = this.pullingIcon;\n    const hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n    const mode = getIonMode(this);\n    return (h(Host, { class: mode }, h(\"div\", { class: \"refresher-pulling\" }, this.pullingIcon && hasSpinner &&\n      h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"div\", { class: \"spinner-arrow-container\" }, h(\"ion-spinner\", { name: this.pullingIcon, paused: true }), mode === 'md' && this.pullingIcon === 'circular' &&\n        h(\"div\", { class: \"arrow-container\" }, h(\"ion-icon\", { name: \"caret-back-sharp\" })))), this.pullingIcon && !hasSpinner &&\n      h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"ion-icon\", { icon: this.pullingIcon, lazy: false })), this.pullingText &&\n      h(\"div\", { class: \"refresher-pulling-text\", innerHTML: sanitizeDOMString(this.pullingText) })), h(\"div\", { class: \"refresher-refreshing\" }, this.refreshingSpinner &&\n      h(\"div\", { class: \"refresher-refreshing-icon\" }, h(\"ion-spinner\", { name: this.refreshingSpinner })), this.refreshingText &&\n      h(\"div\", { class: \"refresher-refreshing-text\", innerHTML: sanitizeDOMString(this.refreshingText) }))));\n  }\n  get el() { return getElement(this); }\n};\n\nexport { Refresher as ion_refresher, RefresherContent as ion_refresher_content };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n"],"sourceRoot":""}