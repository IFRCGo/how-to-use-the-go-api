{"version":3,"sources":["../node_modules/@ionic/core/dist/esm/ion-menu_3.entry.js","../node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js"],"names":["Menu","hostRef","registerInstance","this","ionWillOpen","createEvent","ionWillClose","ionDidOpen","ionDidClose","ionMenuChange","lastOnEnd","blocker","GESTURE_CONTROLLER","createBlocker","disableScroll","isAnimating","_isOpen","isPaneVisible","isEndSide","disabled","side","swipeGesture","maxEdgeStart","type","oldType","contentEl","undefined","classList","remove","add","removeAttribute","menuInnerEl","animation","updateState","emit","open","config","get","el","parent","parentNode","contentId","console","warn","content","document","getElementById","querySelector","tagName","error","typeChanged","sideChanged","menuController","_register","gesture","createGesture","gestureName","gesturePriority","threshold","blurOnStart","canStart","ev","onWillStart","onStart","onMove","onEnd","destroy","_unregister","backdropEl","detail","isPane","timeStamp","composedPath","includes","preventDefault","stopPropagation","close","Promise","resolve","_isActive","animated","setOpen","shouldOpen","_setOpen","beforeAnimation","loadAnimation","startAnimation","afterAnimation","width","offsetWidth","_createAnimation","getBoolean","duration","fill","isReversed","mode","getIonMode","easing","easingReverse","ani","direction","onFinish","getDirection","play","sync","canSwipe","_getOpenSync","checkEdgeSide","window","currentX","progressStart","assert","stepValue","computeDelta","deltaX","progressStep","isOpen","delta","velocity","velocityX","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","currentTime","newStepValue","adjustedStepValue","getTimeGivenProgression","clamp","playTo","oneTimeCallback","progressEnd","SHOW_MENU","SHOW_BACKDROP","block","unblock","MENU_CONTENT_OPEN","stop","isActive","enable","forceClosing","_setActiveMenu","h","Host","role","class","part","ref","tappable","getElement","Math","max","win","posX","innerWidth","style","ios","md","updateVisibility","menu","a","menuEl","MenuButton","visible","autoHide","onClick","toggle","visibilityChanged","color","menuIcon","hidden","attrs","createColorClasses","hostContext","Object","assign","icon","lazy","MenuToggle","selector","closest","cssClassMap","length","getClassMap","classes","map","Array","isArray","split","filter","c","trim","getClassList","forEach","SCHEME","openURL","url","test","router","push"],"mappings":"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","file":"static/js/29.f586c64e.chunk.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-e806d1f6.js';\nimport { c as config, b as getIonMode } from './ionic-global-9d5c8ee3.js';\nimport { j as isEndSide, i as assert, e as clamp } from './helpers-002e4980.js';\nimport './animation-ede2d71c.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\nimport { G as GESTURE_CONTROLLER } from './gesture-controller-31cb6bb9.js';\nimport './hardware-back-button-389954a0.js';\nimport { m as menuController } from './index-9ba1f74f.js';\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\n\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\n\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\n\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\nconst Menu = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n    this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n    this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n    this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n    this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n    this.lastOnEnd = 0;\n    this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n    this.isAnimating = false;\n    this._isOpen = false;\n    this.isPaneVisible = false;\n    this.isEndSide = false;\n    /**\n     * If `true`, the menu is disabled.\n     */\n    this.disabled = false;\n    /**\n     * Which side of the view the menu should be placed.\n     */\n    this.side = 'start';\n    /**\n     * If `true`, swiping the menu is enabled.\n     */\n    this.swipeGesture = true;\n    /**\n     * The edge threshold for dragging the menu open.\n     * If a drag/swipe happens over this value, the menu is not triggered.\n     */\n    this.maxEdgeStart = 50;\n  }\n  typeChanged(type, oldType) {\n    const contentEl = this.contentEl;\n    if (contentEl) {\n      if (oldType !== undefined) {\n        contentEl.classList.remove(`menu-content-${oldType}`);\n      }\n      contentEl.classList.add(`menu-content-${type}`);\n      contentEl.removeAttribute('style');\n    }\n    if (this.menuInnerEl) {\n      // Remove effects of previous animations\n      this.menuInnerEl.removeAttribute('style');\n    }\n    this.animation = undefined;\n  }\n  disabledChanged() {\n    this.updateState();\n    this.ionMenuChange.emit({\n      disabled: this.disabled,\n      open: this._isOpen\n    });\n  }\n  sideChanged() {\n    this.isEndSide = isEndSide(this.side);\n  }\n  swipeGestureChanged() {\n    this.updateState();\n  }\n  async connectedCallback() {\n    if (this.type === undefined) {\n      this.type = config.get('menuType', 'overlay');\n    }\n    const el = this.el;\n    const parent = el.parentNode;\n    if (this.contentId === undefined) {\n      console.warn(`[DEPRECATED][ion-menu] Using the [main] attribute is deprecated, please use the \"contentId\" property instead:\nBEFORE:\n  <ion-menu>...</ion-menu>\n  <div main>...</div>\n\nAFTER:\n  <ion-menu contentId=\"main-content\"></ion-menu>\n  <div id=\"main-content\">...</div>\n`);\n    }\n    const content = this.contentId !== undefined\n      ? document.getElementById(this.contentId)\n      : parent && parent.querySelector && parent.querySelector('[main]');\n    if (!content || !content.tagName) {\n      // requires content element\n      console.error('Menu: must have a \"content\" element to listen for drag events on.');\n      return;\n    }\n    this.contentEl = content;\n    // add menu's content classes\n    content.classList.add('menu-content');\n    this.typeChanged(this.type, undefined);\n    this.sideChanged();\n    // register this menu with the app's menu controller\n    menuController._register(this);\n    this.gesture = (await import('./index-f49d994d.js')).createGesture({\n      el: document,\n      gestureName: 'menu-swipe',\n      gesturePriority: 30,\n      threshold: 10,\n      blurOnStart: true,\n      canStart: ev => this.canStart(ev),\n      onWillStart: () => this.onWillStart(),\n      onStart: () => this.onStart(),\n      onMove: ev => this.onMove(ev),\n      onEnd: ev => this.onEnd(ev),\n    });\n    this.updateState();\n  }\n  async componentDidLoad() {\n    this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n    this.updateState();\n  }\n  disconnectedCallback() {\n    this.blocker.destroy();\n    menuController._unregister(this);\n    if (this.animation) {\n      this.animation.destroy();\n    }\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n    this.animation = undefined;\n    this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\n  }\n  onSplitPaneChanged(ev) {\n    this.isPaneVisible = ev.detail.isPane(this.el);\n    this.updateState();\n  }\n  onBackdropClick(ev) {\n    if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n      const shouldClose = (ev.composedPath)\n        ? !ev.composedPath().includes(this.menuInnerEl)\n        : false;\n      if (shouldClose) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.close();\n      }\n    }\n  }\n  /**\n   * Returns `true` is the menu is open.\n   */\n  isOpen() {\n    return Promise.resolve(this._isOpen);\n  }\n  /**\n   * Returns `true` is the menu is active.\n   *\n   * A menu is active when it can be opened or closed, meaning it's enabled\n   * and it's not part of a `ion-split-pane`.\n   */\n  isActive() {\n    return Promise.resolve(this._isActive());\n  }\n  /**\n   * Opens the menu. If the menu is already open or it can't be opened,\n   * it returns `false`.\n   */\n  open(animated = true) {\n    return this.setOpen(true, animated);\n  }\n  /**\n   * Closes the menu. If the menu is already closed or it can't be closed,\n   * it returns `false`.\n   */\n  close(animated = true) {\n    return this.setOpen(false, animated);\n  }\n  /**\n   * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n   * If the operation can't be completed successfully, it returns `false`.\n   */\n  toggle(animated = true) {\n    return this.setOpen(!this._isOpen, animated);\n  }\n  /**\n   * Opens or closes the button.\n   * If the operation can't be completed successfully, it returns `false`.\n   */\n  setOpen(shouldOpen, animated = true) {\n    return menuController._setOpen(this, shouldOpen, animated);\n  }\n  async _setOpen(shouldOpen, animated = true) {\n    // If the menu is disabled or it is currently being animated, let's do nothing\n    if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n      return false;\n    }\n    this.beforeAnimation(shouldOpen);\n    await this.loadAnimation();\n    await this.startAnimation(shouldOpen, animated);\n    this.afterAnimation(shouldOpen);\n    return true;\n  }\n  async loadAnimation() {\n    // Menu swipe animation takes the menu's inner width as parameter,\n    // If `offsetWidth` changes, we need to create a new animation.\n    const width = this.menuInnerEl.offsetWidth;\n    if (width === this.width && this.animation !== undefined) {\n      return;\n    }\n    this.width = width;\n    // Destroy existing animation\n    if (this.animation) {\n      this.animation.destroy();\n      this.animation = undefined;\n    }\n    // Create new animation\n    this.animation = await menuController._createAnimation(this.type, this);\n    if (!config.getBoolean('animated', true)) {\n      this.animation.duration(0);\n    }\n    this.animation.fill('both');\n  }\n  async startAnimation(shouldOpen, animated) {\n    const isReversed = !shouldOpen;\n    const mode = getIonMode(this);\n    const easing = mode === 'ios' ? iosEasing : mdEasing;\n    const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n    const ani = this.animation\n      .direction((isReversed) ? 'reverse' : 'normal')\n      .easing((isReversed) ? easingReverse : easing)\n      .onFinish(() => {\n      if (ani.getDirection() === 'reverse') {\n        ani.direction('normal');\n      }\n    });\n    if (animated) {\n      await ani.play();\n    }\n    else {\n      ani.play({ sync: true });\n    }\n  }\n  _isActive() {\n    return !this.disabled && !this.isPaneVisible;\n  }\n  canSwipe() {\n    return this.swipeGesture && !this.isAnimating && this._isActive();\n  }\n  canStart(detail) {\n    // Do not allow swipe gesture if a modal is open\n    const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n    if (isModalPresented || !this.canSwipe()) {\n      return false;\n    }\n    if (this._isOpen) {\n      return true;\n      // TODO error\n    }\n    else if (menuController._getOpenSync()) {\n      return false;\n    }\n    return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n  }\n  onWillStart() {\n    this.beforeAnimation(!this._isOpen);\n    return this.loadAnimation();\n  }\n  onStart() {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    // the cloned animation should not use an easing curve during seek\n    this.animation.progressStart(true, (this._isOpen) ? 1 : 0);\n  }\n  onMove(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n    const stepValue = delta / this.width;\n    this.animation.progressStep((this._isOpen) ? 1 - stepValue : stepValue);\n  }\n  onEnd(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    const isOpen = this._isOpen;\n    const isEndSide = this.isEndSide;\n    const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n    const width = this.width;\n    const stepValue = delta / width;\n    const velocity = detail.velocityX;\n    const z = width / 2.0;\n    const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n    const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n    const shouldComplete = isOpen\n      ? isEndSide ? shouldCompleteRight : shouldCompleteLeft\n      : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\n    let shouldOpen = !isOpen && shouldComplete;\n    if (isOpen && !shouldComplete) {\n      shouldOpen = true;\n    }\n    this.lastOnEnd = detail.currentTime;\n    // Account for rounding errors in JS\n    let newStepValue = (shouldComplete) ? 0.001 : -0.001;\n    /**\n     * TODO: stepValue can sometimes return a negative\n     * value, but you can't have a negative time value\n     * for the cubic bezier curve (at least with web animations)\n     * Not sure if the negative step value is an error or not\n     */\n    const adjustedStepValue = (stepValue < 0) ? 0.01 : stepValue;\n    /**\n     * Animation will be reversed here, so need to\n     * reverse the easing curve as well\n     *\n     * Additionally, we need to account for the time relative\n     * to the new easing curve, as `stepValue` is going to be given\n     * in terms of a linear curve.\n     */\n    newStepValue += getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n    const playTo = (this._isOpen) ? !shouldComplete : shouldComplete;\n    this.animation\n      .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n      .onFinish(() => this.afterAnimation(shouldOpen), { oneTimeCallback: true })\n      .progressEnd((playTo) ? 1 : 0, (this._isOpen) ? 1 - newStepValue : newStepValue, 300);\n  }\n  beforeAnimation(shouldOpen) {\n    assert(!this.isAnimating, '_before() should not be called while animating');\n    // this places the menu into the correct location before it animates in\n    // this css class doesn't actually kick off any animations\n    this.el.classList.add(SHOW_MENU);\n    if (this.backdropEl) {\n      this.backdropEl.classList.add(SHOW_BACKDROP);\n    }\n    this.blocker.block();\n    this.isAnimating = true;\n    if (shouldOpen) {\n      this.ionWillOpen.emit();\n    }\n    else {\n      this.ionWillClose.emit();\n    }\n  }\n  afterAnimation(isOpen) {\n    assert(this.isAnimating, '_before() should be called while animating');\n    // keep opening/closing the menu disabled for a touch more yet\n    // only add listeners/css if it's enabled and isOpen\n    // and only remove listeners/css if it's not open\n    // emit opened/closed events\n    this._isOpen = isOpen;\n    this.isAnimating = false;\n    if (!this._isOpen) {\n      this.blocker.unblock();\n    }\n    if (isOpen) {\n      // add css class\n      if (this.contentEl) {\n        this.contentEl.classList.add(MENU_CONTENT_OPEN);\n      }\n      // emit open event\n      this.ionDidOpen.emit();\n    }\n    else {\n      // remove css classes\n      this.el.classList.remove(SHOW_MENU);\n      if (this.contentEl) {\n        this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n      }\n      if (this.backdropEl) {\n        this.backdropEl.classList.remove(SHOW_BACKDROP);\n      }\n      if (this.animation) {\n        this.animation.stop();\n      }\n      // emit close event\n      this.ionDidClose.emit();\n    }\n  }\n  updateState() {\n    const isActive = this._isActive();\n    if (this.gesture) {\n      this.gesture.enable(isActive && this.swipeGesture);\n    }\n    // Close menu immediately\n    if (!isActive && this._isOpen) {\n      // close if this menu is open, and should not be enabled\n      this.forceClosing();\n    }\n    if (!this.disabled) {\n      menuController._setActiveMenu(this);\n    }\n    assert(!this.isAnimating, 'can not be animating');\n  }\n  forceClosing() {\n    assert(this._isOpen, 'menu cannot be closed');\n    this.isAnimating = true;\n    const ani = this.animation.direction('reverse');\n    ani.play({ sync: true });\n    this.afterAnimation(false);\n  }\n  render() {\n    const { isEndSide, type, disabled, isPaneVisible } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { role: \"navigation\", class: {\n        [mode]: true,\n        [`menu-type-${type}`]: true,\n        'menu-enabled': !disabled,\n        'menu-side-end': isEndSide,\n        'menu-side-start': !isEndSide,\n        'menu-pane-visible': isPaneVisible\n      } }, h(\"div\", { class: \"menu-inner\", part: \"container\", ref: el => this.menuInnerEl = el }, h(\"slot\", null)), h(\"ion-backdrop\", { ref: el => this.backdropEl = el, class: \"menu-backdrop\", tappable: false, stopPropagation: false, part: \"backdrop\" })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"type\": [\"typeChanged\"],\n    \"disabled\": [\"disabledChanged\"],\n    \"side\": [\"sideChanged\"],\n    \"swipeGesture\": [\"swipeGestureChanged\"]\n  }; }\n};\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n  return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n  if (isEndSide) {\n    return posX >= win.innerWidth - maxEdgeStart;\n  }\n  else {\n    return posX <= maxEdgeStart;\n  }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\nMenu.style = {\n  ios: menuIosCss,\n  md: menuMdCss\n};\n\n// Given a menu, return whether or not the menu toggle should be visible\nconst updateVisibility = async (menu) => {\n  const menuEl = await menuController.get(menu);\n  return !!(menuEl && await menuEl.isActive());\n};\n\nconst menuButtonIosCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.1;--border-radius:4px;--color:var(--ion-color-primary, #3880ff);--padding-start:5px;--padding-end:5px;height:32px;font-size:31px}:host(.ion-activated){opacity:0.4}@media (any-hover: hover){:host(:hover){opacity:0.6}}\";\n\nconst menuButtonMdCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.12;--background-hover:currentColor;--background-hover-opacity:.04;--border-radius:50%;--color:initial;--padding-start:8px;--padding-end:8px;width:48px;height:48px;font-size:24px}:host(.ion-color.ion-focused)::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.ion-color:hover) .button-native::after{background:var(--ion-color-base)}}\";\n\nconst MenuButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.visible = false;\n    /**\n     * If `true`, the user cannot interact with the menu button.\n     */\n    this.disabled = false;\n    /**\n     * Automatically hides the menu button when the corresponding menu is not active\n     */\n    this.autoHide = true;\n    /**\n     * The type of the button.\n     */\n    this.type = 'button';\n    this.onClick = async () => {\n      return menuController.toggle(this.menu);\n    };\n  }\n  componentDidLoad() {\n    this.visibilityChanged();\n  }\n  async visibilityChanged() {\n    this.visible = await updateVisibility(this.menu);\n  }\n  render() {\n    const { color, disabled } = this;\n    const mode = getIonMode(this);\n    const menuIcon = config.get('menuIcon', mode === 'ios' ? 'menu-outline' : 'menu-sharp');\n    const hidden = this.autoHide && !this.visible;\n    const attrs = {\n      type: this.type\n    };\n    return (h(Host, { onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: createColorClasses(color, {\n        [mode]: true,\n        'button': true,\n        'menu-button-hidden': hidden,\n        'menu-button-disabled': disabled,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'ion-activatable': true,\n        'ion-focusable': true\n      }) }, h(\"button\", Object.assign({}, attrs, { disabled: disabled, class: \"button-native\", part: \"native\", \"aria-label\": \"menu\" }), h(\"span\", { class: \"button-inner\" }, h(\"slot\", null, h(\"ion-icon\", { part: \"icon\", icon: menuIcon, mode: mode, lazy: false, \"aria-hidden\": \"true\" }))), mode === 'md' && h(\"ion-ripple-effect\", { type: \"unbounded\" }))));\n  }\n  get el() { return getElement(this); }\n};\nMenuButton.style = {\n  ios: menuButtonIosCss,\n  md: menuButtonMdCss\n};\n\nconst menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\n\nconst MenuToggle = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.visible = false;\n    /**\n     * Automatically hides the content when the corresponding menu is not active.\n     *\n     * By default, it's `true`. Change it to `false` in order to\n     * keep `ion-menu-toggle` always visible regardless the state of the menu.\n     */\n    this.autoHide = true;\n    this.onClick = () => {\n      return menuController.toggle(this.menu);\n    };\n  }\n  connectedCallback() {\n    this.visibilityChanged();\n  }\n  async visibilityChanged() {\n    this.visible = await updateVisibility(this.menu);\n  }\n  render() {\n    const mode = getIonMode(this);\n    const hidden = this.autoHide && !this.visible;\n    return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n        [mode]: true,\n        'menu-toggle-hidden': hidden,\n      } }, h(\"slot\", null)));\n  }\n};\nMenuToggle.style = menuToggleCss;\n\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuToggle as ion_menu_toggle };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"sourceRoot":""}